<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="MinifyTarget" xmlns="http://schemas.microsoft.com/developer/MsBuild/2003">
	<!--
	Microsoft Visual Studio
	Post-build event command line: call "$(MSBuildBinPath)\msbuild.exe" "$(SolutionDir)PostBuildEvent_MSBuild_CssJs.xml" /p:SourceLocation="$(SolutionDir)$(ProjectName).Published"

	References
	http://yuicompressor.codeplex.com/
	Download NuGet.exe Command Line, http://nuget.codeplex.com/releases/view/58939
	http://nuget.org/List/Packages/YUICompressor.NET-MsBuild-Task
	-->
	<UsingTask
		TaskName="CompressorTask"
		AssemblyFile="Libraries\Yahoo.Yui.Compressor.MsBuildTask.dll"
	/>
	<!--
		Define the output locations. These can be set via the msbuild command line using
		/p:SourceLocation="$(ProjectDir)"
		/p:CssOutputFile=$(ProjectDir)../whatever...
		/p:JavaScriptOutputFile=$(ProjectDir)../whatever...

		If they are not supplied or are empty, then we the value whatever is supplied, below.
	-->
	<PropertyGroup>
		<CssOutputFile Condition=" '$(CssOutputFile)'=='' ">C:\inetpub\wwwroot_sandbox_umbraco1\_assets\css\aaa_min.css</CssOutputFile>
		<JavaScriptOutputFile Condition=" '$(JavaScriptOutputFile)'=='' ">C:\inetpub\wwwroot_sandbox_umbraco1\_assets\js\aaa_min.js</JavaScriptOutputFile>
	</PropertyGroup>
	<Target Name="MinifyTarget">
		<ItemGroup>
			<!-- Single files, listed in order of dependency -->
			<CssFiles Include="$(SourceLocation)\_assets\css\main.css"/>

			<JavaScriptFiles Include="$(SourceLocation)\_assets\js\main.js"/>

			<!-- All the files. They will be handled (I assume) in alphabetically. -->
			<!--
			<CssFiles Include="$(SourceLocation)*.css"/>
			<JavaScriptFiles Include="$(SourceLocation)*.js"/>
			-->
		</ItemGroup>
		<CompressorTask
			CssFiles="@(CssFiles)"
			DeleteCssFiles="False"
			CssOutputFile="$(CssOutputFile)"
			CssCompressionType="YuiStockCompression"
			JavaScriptFiles="@(JavaScriptFiles)"
			ObfuscateJavaScript="True"
			PreserveAllSemicolons="False"
			DisableOptimizations="Nope"
			EncodingType="Default"
			DeleteJavaScriptFiles="False"
			LineBreakPosition="-1"
			JavaScriptOutputFile="$(JavaScriptOutputFile)"
			LoggingType="ALittleBit"
			ThreadCulture="en-US"
			IsEvalIgnored="False"
			PreserveCssComments="True"
		/>
		<!--
		ItemGroup\CssFiles or ItemGroup\JavaScriptFiles: add zero to many files you wish to include in this compression task.
														Don't forget, you can use the wildcard (eg. *.css, *.js) if you feel up to it.
														Finally, at least one item is required - either a css file or a js file.
		CssFiles/JavaScriptFiles data format: Please do not touch this.
		DeleteCssFiles: [Optional] True | Yes | Yeah | Yep | True | FoSho | Fo Sho. Default is False. Anything else is False. (eg. blah = false, xxxx111 = false, etc)
		CssCompressionType: YuiStockCompression | MichaelAshsRegexEnhancements | HaveMyCakeAndEatIt or BestOfBothWorlds or Hybrid; Default is YuiStockCompression.
		ObfuscateJavaScript: [Optional] refer to DeleteCssFiles, above.
		PreserveAllSemicolons: [Optional] refer to DeleteCssFiles, above.
		DisableOptimizations: [Optional] refer to DeleteCssFiles, above.
		EncodingType: [Optional] ASCII, BigEndianUnicode, Unicode, UTF32, UTF7, UTF8, Default. Default is 'Default'.
		DeleteJavaScriptFiles: [Optional] refer to DeleteCssFiles, above.
		LineBreakPosition: [Optional] the position where a line feed is appened when the next semicolon is reached. Default is -1 (never add a line break).
						0 (zero) means add a line break after every semicolon. (This might help with debugging troublesome files).          
		LoggingType: None | ALittleBit | HardcoreBringItOn;  Hardcore also lists javascript verbose warnings, if there are any (and there usually is :P ).
		ThreadCulture: [Optional] the culture you want the thread to run under. Default is 'en-gb'.
		IsEvalIgnored: [Optional] compress any functions that contain 'eval'. Default is False, which means a function that contains
					'eval' will NOT be compressed. It's deemed risky to compress a function containing 'eval'. That said,
					if the usages are deemed safe this check can be disabled by setting this value to True.
		PreserveCssComments: [Optional] refer to DeleteCssFiles, above.
		-->
	</Target>
</Project>